module multiplier(
    input [3:0] A,
    input [3:0] B,
    output [7:0] C
    );
    
    wire C1, C2, C3;
    wire [3:0] D, E,F,G,  H,I,J  ,K,L,M   ,O,P,Q; 
    wire Cin;
	wire  [2:0]Cout;
	wire a;
    
    assign D[0] = B[0] & A[0];
    assign D[1] = B[0] & A[1];
    assign D[2] = B[0] & A[2];
    assign D[3] = B[0] & A[3];
    assign E[0] = B[1] & A[0];
    assign E[1] = B[1] & A[1];
    assign E[2] = B[1] & A[2];
    assign E[3] = B[1] & A[3];
    assign F[0] = B[2] & A[0];
    assign F[1] = B[2] & A[1];
    assign F[2] = B[2] & A[2];
    assign F[3] = B[2] & A[3];
    assign G[0] = B[3] & A[0];
    assign G[1] = B[3] & A[1];
    assign G[2] = B[3] & A[2];
    assign G[3] = B[3] & A[3];
    assign Cin = 1'b0;
    

    
   assign C[0] = D[0];

    assign O[2:0]= D[3:1];
    assign O[3]=Cin;
    
    assign O[3] = 0;

	FourAdder ycl_1_FourAdder(.A(O),.B(E),.Cin(Cin),.S(H),.Cout(Cout[0]));	
	assign C[1] = H[0];

	assign P[2:0]= H[3:1];
	assign P[3] = Cout[0];

	
	
	FourAdder ycl_2_FourAdder(.A(F),.B(P),.Cin(Cin),.S(I),.Cout(Cout[1]));
	 assign C[2] = I[0];
	 assign Q[2:0] =I[3:1];
	 assign Q[3] = Cout[1];

	FourAdder ycl_3_FourAdder(.A(G),.B(Q),.Cin(Cin),.S(J),.Cout(Cout[2]));	

    
  
    
    assign C[6:3] = J[3:0];
   assign C[7] = Cout[2];
    
endmodule
